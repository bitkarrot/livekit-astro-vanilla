var Se=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var qe=Se((_e,z)=>{let i,j=!1;const c={participants:new Map,screenShares:new Map,lastGridUpdate:0,updateTimer:null,adminViewState:{viewMode:"normal",targetParticipantId:null,adminIdentity:null,timestamp:Date.now()},updateParticipant(e,t,n=!1){this.participants.set(e.identity,{participant:e,isLocal:t,isAdmin:n,isSpeaking:e.speaking,lastUpdated:Date.now()}),this.scheduleGridUpdate()},removeParticipant(e){this.participants.delete(e),this.scheduleGridUpdate()},updateScreenShare(e,t,n){n?this.screenShares.set(e.identity,{participant:e,track:t,lastUpdated:Date.now()}):this.screenShares.delete(e.identity),this.scheduleGridUpdate()},getParticipantCount(){return Ce()},scheduleGridUpdate(){Date.now()-this.lastGridUpdate<100&&clearTimeout(this.updateTimer),this.updateTimer=setTimeout(()=>{this.lastGridUpdate=Date.now(),P()},100)},isCurrentUserAdmin(){if(!i||!i.localParticipant)return!1;const e=this.participants.get(i.localParticipant.identity);return e&&e.isAdmin},setAdminViewState(e,t=null){return this.isCurrentUserAdmin()?(this.adminViewState={viewMode:e,targetParticipantId:t,adminIdentity:i.localParticipant.identity,timestamp:Date.now()},console.log("Admin view state updated:",this.adminViewState),!0):(console.warn("Non-admin user attempted to set admin view state"),!1)},cleanupStaleParticipants(){const e=Date.now(),t=6e4;for(const[n,o]of this.participants.entries())e-o.lastUpdated>t&&(console.log("Removing stale participant:",n),this.participants.delete(n));for(const[n,o]of this.screenShares.entries())e-o.lastUpdated>t&&(console.log("Removing stale screen share:",n),this.screenShares.delete(n))}};let x,H,ue,B,G,v,y,q,K,M,me,pe,ge,Q,X,Z,ee,$,he,C,k,E,te,fe,N,ve,U,F,ne,ie,S=!1,L=!1,b=null,oe="",_=new Map,D=null,re="wss://livekit.useguerilla.net",d={isExpandedView:!1,expandedParticipantId:null,isScreenShareFullScreen:!1,screenShareParticipantId:null,screenShareTrack:null,adminOverride:!1};document.addEventListener("DOMContentLoaded",()=>{Le(),setTimeout(()=>{c.scheduleGridUpdate()},500)});async function Le(){console.log("Initializing LiveKit app..."),v=document.getElementById("mainContainer"),x=document.getElementById("connect-modal"),H=document.getElementById("permissions-warning"),ue=document.getElementById("join-btn"),B=document.getElementById("username"),G=document.getElementById("room"),y=document.getElementById("videoGrid"),q=document.getElementById("mic-btn"),K=document.getElementById("camera-btn"),M=document.getElementById("screen-btn"),me=document.getElementById("invite-btn"),pe=document.getElementById("leave-btn"),ge=document.getElementById("settings-btn"),Q=document.getElementById("mic-icon"),X=document.getElementById("mic-off-icon"),Z=document.getElementById("camera-icon"),ee=document.getElementById("camera-off-icon"),$=document.getElementById("status-banner"),he=document.getElementById("status-text"),C=document.getElementById("audio-input"),k=document.getElementById("video-input"),E=document.getElementById("audio-output"),te=document.getElementById("toast"),fe=document.getElementById("toast-message"),N=document.getElementById("settings-popup"),ve=document.getElementById("close-settings"),U=document.getElementById("media-devices-tab"),F=document.getElementById("effects-tab"),ne=document.getElementById("media-devices-content"),ie=document.getElementById("effects-content");try{if(typeof LivekitClient>"u")throw new Error("LiveKit SDK not loaded. Please refresh the page and try again.");console.log("LiveKit SDK version:",LivekitClient.version),i=new LivekitClient.Room({adaptiveStream:!0,dynacast:!0,videoCaptureDefaults:{resolution:{width:640,height:480}},publishDefaults:{simulcast:!0},autoSubscribe:!0}),i.participants||(console.log("Creating participants Map since it was undefined"),i.participants=new Map),await se(),Ie();const e=new URLSearchParams(window.location.search),t=e.get("username"),n=window.roomNameFromPath;if(t&&n){console.log("Direct join requested with username:",t),localStorage.setItem("livekit-username",t),x&&(x.style.display="none");try{const o=localStorage.getItem("livekit-audio-enabled")!=="false",a=localStorage.getItem("livekit-video-enabled")!=="false",l=localStorage.getItem("livekit-audio-device")||null,r=localStorage.getItem("livekit-video-device")||null;S=o,L=a,await ce(t,n,{audioDeviceId:l,videoDeviceId:r,audioEnabled:o,videoEnabled:a}),window.roomNameFromPath!==void 0||(window.location.href=`/room/${encodeURIComponent(n)}`)}catch(o){console.error("[ERROR] Error connecting to room directly:",o),s("Failed to connect: "+(o.message||"Unknown error")),x&&(x.style.display="flex"),B&&(B.value=t)}}else if(n){console.log("Room name from path:",n),G.value=n;const o=localStorage.getItem("livekit-username")||"";o&&(B.value=o)}else{const o=e.get("room");if(o){G.value=o;const a=localStorage.getItem("livekit-username")||"";a&&(B.value=a)}}console.log("LiveKit app initialized successfully"),setTimeout(xe,500)}catch(e){console.error("Failed to initialize app:",e),s("Failed to initialize: "+e.message)}}function xe(){document.querySelectorAll('div[id^="send-element"], div[id^="debug-"], div[id^="dev-"]').forEach(t=>{console.log("Removing debug element:",t),t.style.display="none"})}function Ie(){ue.addEventListener("click",async()=>{const e=B.value.trim(),t=G.value.trim()||window.roomNameFromPath;if(!e){s("Please enter your name");return}if(!t){s("Room name is missing");return}localStorage.setItem("livekit-username",e);try{const n=localStorage.getItem("livekit-audio-enabled")!=="false",o=localStorage.getItem("livekit-video-enabled")!=="false",a=localStorage.getItem("livekit-audio-device")||null,l=localStorage.getItem("livekit-video-device")||null;S=n,L=o,await ce(e,t,{audioDeviceId:a,videoDeviceId:l,audioEnabled:n,videoEnabled:o}),window.roomNameFromPath!==void 0||(window.location.href=`/room/${encodeURIComponent(t)}`)}catch(n){console.error("[ERROR] Error connecting to room:",n),s("Failed to connect: "+(n.message||"Unknown error"))}}),q.addEventListener("click",async()=>{try{if(!i||!i.localParticipant){console.error("Cannot toggle microphone: Room or local participant not available"),s("You must join a room before toggling your microphone");return}try{S?(await i.localParticipant.setMicrophoneEnabled(!1),S=!1,s("Microphone disabled")):(await i.localParticipant.setMicrophoneEnabled(!0),S=!0,s("Microphone enabled")),J()}catch(e){console.error("[ERROR] Error toggling microphone:",e),e.name==="NotAllowedError"||e.message.includes("Permission denied")?(H.classList.remove("hidden"),s("Microphone access denied. Please check your permissions.")):s("Failed to toggle microphone: "+(e.message||"Unknown error")),S=!S,J()}}catch(e){console.error("[ERROR] Unexpected error toggling microphone:",e),s("An unexpected error occurred")}}),K.addEventListener("click",async()=>{try{if(!i||!i.localParticipant){console.error("Cannot toggle camera: Room or local participant not available"),s("You must join a room before toggling your camera");return}try{L?(await i.localParticipant.setCameraEnabled(!1),L=!1,s("Camera disabled")):(await i.localParticipant.setCameraEnabled(!0),L=!0,s("Camera enabled")),W()}catch(e){console.error("[ERROR] Error toggling camera:",e),e.name==="NotAllowedError"||e.message.includes("Permission denied")?(H.classList.remove("hidden"),s("Camera access denied. Please check your permissions.")):s("Failed to toggle camera: "+(e.message||"Unknown error")),L=!L,W()}}catch(e){console.error("[ERROR] Unexpected error toggling camera:",e),s("An unexpected error occurred")}}),M.addEventListener("click",async()=>{try{if(!i||!i.localParticipant){console.error("Cannot toggle screen share: Room or local participant not available"),s("You must join a room before sharing your screen");return}if(b)await i.localParticipant.unpublishTrack(b),b.stop(),b=null,M.classList.remove("bg-blue-600"),M.classList.add("bg-gray-700"),s("Screen sharing stopped"),c.updateScreenShare(i.localParticipant,null,!1),D=null;else try{const e={audio:!0,video:!0};console.log("Getting display media with constraints:",e);const n=(await navigator.mediaDevices.getDisplayMedia(e)).getVideoTracks()[0];if(!n)throw new Error("No video track found in screen share stream");console.log("Created screen share video track:",n.id,n.label),b=new LivekitClient.LocalVideoTrack(n),console.log("Created LiveKit screen share track:",b),n.addEventListener("ended",()=>{console.log("Screen share track ended event fired"),b&&(i.localParticipant.unpublishTrack(b),b=null,M.classList.remove("bg-blue-600"),M.classList.add("bg-gray-700"),s("Screen sharing stopped"),c.scheduleGridUpdate())});const o={name:"screen",source:LivekitClient.Track.Source.ScreenShare};await i.localParticipant.publishTrack(b,o),console.log("Published screen share track:",b.sid),M.classList.remove("bg-gray-700"),M.classList.add("bg-blue-600"),s("Screen sharing started"),D=i.localParticipant.identity,c.updateScreenShare(i.localParticipant,b,!0),c.scheduleGridUpdate()}catch(e){if(e.name==="NotAllowedError"||e.message.includes("Permission denied")){console.log("User cancelled screen sharing");return}console.error("[ERROR] Error toggling screen share:",e),s("Failed to share screen: "+(e.message||"Unknown error"))}}catch(e){console.error("[ERROR] Error toggling screen share:",e),s("An unexpected error occurred while sharing screen")}}),me.addEventListener("click",()=>{try{if(!oe){s("You must join a room first");return}const e=`${window.location.origin}/room/${encodeURIComponent(oe)}`;navigator.clipboard.writeText(e).then(()=>{s("Invite link copied to clipboard")}).catch(t=>{console.error("Failed to copy invite link:",t),s("Failed to copy invite link")})}catch(e){console.error("Error generating invite link:",e),s("Error generating invite link")}}),pe.addEventListener("click",async()=>{i&&(await i.disconnect(),x.classList.remove("hidden"),$.classList.add("hidden"),y.innerHTML="")}),C.addEventListener("change",async()=>{try{if(!i||!i.localParticipant){console.log("Cannot change audio device: Not connected to a room");return}const e=C.value;if(!e)return;await i.switchActiveDevice(LivekitClient.Track.Kind.Audio,e),s("Microphone changed")}catch(e){console.error("[ERROR] Failed to switch audio device:",e),s("Failed to change microphone: "+(e.message||"Unknown error"))}}),k.addEventListener("change",async()=>{try{if(!i||!i.localParticipant){console.log("Cannot change video device: Not connected to a room");return}const e=k.value;if(!e)return;await i.switchActiveDevice(LivekitClient.Track.Kind.Video,e),s("Camera changed")}catch(e){console.error("[ERROR] Failed to switch video device:",e),s("Failed to change camera: "+(e.message||"Unknown error"))}}),ge.addEventListener("click",()=>{N.classList.remove("hidden"),Pe(),Re()}),ve.addEventListener("click",()=>{N.classList.add("hidden")}),N.addEventListener("click",e=>{e.target===N&&N.classList.add("hidden")}),U.addEventListener("click",()=>{U.classList.add("border-blue-500"),U.classList.remove("border-transparent","text-gray-400"),ne.classList.remove("hidden"),F.classList.remove("border-blue-500"),F.classList.add("border-transparent","text-gray-400"),ie.classList.add("hidden")}),F.addEventListener("click",()=>{F.classList.add("border-blue-500"),F.classList.remove("border-transparent","text-gray-400"),ie.classList.remove("hidden"),U.classList.remove("border-blue-500"),U.classList.add("border-transparent","text-gray-400"),ne.classList.add("hidden")}),E&&E.addEventListener("change",Ae)}function ye(){i&&(i.removeAllListeners(),i.on(LivekitClient.RoomEvent.ConnectionStateChanged,e=>{switch(console.log("Connection state changed:",e),e){case LivekitClient.ConnectionState.Connecting:R("Connecting...");break;case LivekitClient.ConnectionState.Connected:R("Connected"),j=!1;break;case LivekitClient.ConnectionState.Disconnected:R("Disconnected"),j||ae();break;case LivekitClient.ConnectionState.Reconnecting:R("Reconnecting..."),j=!0;break}}),i.on(LivekitClient.RoomEvent.ParticipantConnected,e=>{console.log("Participant connected:",e.identity),i.participants?(i.participants.set(e.sid,e),console.log("Added participant to Map:",e.identity,"with SID:",e.sid)):console.log("Cannot add participant to Map - room.participants is undefined"),console.log("Current participants after connection:",Array.from(i.participants?.entries()||[]).map(([t,n])=>({sid:t,identity:n.identity}))),s(`${e.identity} joined the room`),c.updateParticipant(e,!1)}),i.on(LivekitClient.RoomEvent.ParticipantDisconnected,e=>{console.log("Participant disconnected:",e.identity),i.participants&&e.sid&&(i.participants.delete(e.sid),console.log("Removed participant from Map:",e.identity,"with SID:",e.sid)),s(`${e.identity} left the room`),c.removeParticipant(e.identity)}),i.on(LivekitClient.RoomEvent.TrackSubscribed,(e,t,n)=>{console.log("Track subscribed:",e.kind,"from",n.identity),e.source===LivekitClient.Track.Source.ScreenShare&&(console.log("Screen share track subscribed from:",n.identity),D=n.identity,c.updateScreenShare(n,e,!0),c.scheduleGridUpdate()),c.updateParticipant(n,!1),e.kind===LivekitClient.Track.Kind.Audio&&Ue(n)}),i.on(LivekitClient.RoomEvent.TrackUnsubscribed,(e,t,n)=>{if(console.log("Track unsubscribed:",e.kind,"from",n.identity),e.source===LivekitClient.Track.Source.ScreenShare){console.log("Screen share track unsubscribed from:",n.identity),D===n.identity&&(D=null);const o=document.getElementById(`screen-${n.identity}`);o&&o.remove(),c.updateScreenShare(n,null,!1),c.scheduleGridUpdate()}c.removeParticipant(n.identity)}),i.on(LivekitClient.RoomEvent.TrackMuted,(e,t)=>{console.log("Track muted:",e.kind,"from",t.identity),e.source===LivekitClient.Track.Source.ScreenShare&&(console.log("Screen share track muted from:",t.identity),D===t.identity&&c.scheduleGridUpdate()),i&&i.state===LivekitClient.ConnectionState.Connected&&c.scheduleGridUpdate()}),i.on(LivekitClient.RoomEvent.TrackUnmuted,(e,t)=>{console.log("Track unmuted:",e.kind,"from",t.identity),e.source===LivekitClient.Track.Source.ScreenShare&&(console.log("Screen share track unmuted from:",t.identity),D=t.identity,c.updateScreenShare(t,e.track,!0),c.scheduleGridUpdate()),i&&i.state===LivekitClient.ConnectionState.Connected&&c.scheduleGridUpdate()}),i.on(LivekitClient.RoomEvent.ActiveSpeakersChanged,e=>{i&&i.state===LivekitClient.ConnectionState.Connected&&Oe(e)}),i.on(LivekitClient.RoomEvent.ConnectionQualityChanged,(e,t)=>{i&&i.state===LivekitClient.ConnectionState.Connected&&Ve(e,t)}),i.on(LivekitClient.RoomEvent.Disconnected,()=>{console.log("Disconnected from room"),j||(x.classList.remove("hidden"),$.classList.add("hidden"),y.innerHTML="",ae())}))}function ae(){_.clear(),S=!1,L=!1,b=null,i&&(i.removeAllListeners(),i=null)}async function ce(e,t,n={}){try{console.log("Joining room:",t),R("Connecting..."),$.classList.remove("hidden");const o=await $e(e,t);i=new LivekitClient.Room({adaptiveStream:n.adaptiveStream||!0,dynacast:n.dynacast||!0,autoSubscribe:!0}),ye();try{await i.connect(re,o),console.log("Connected to room:",i.name),document.title=`LiveKit Room: ${i.name}`;const a=await navigator.mediaDevices.enumerateDevices(),l=a.some(u=>u.kind==="audioinput"),r=a.some(u=>u.kind==="videoinput");console.log("Audio available:",l),console.log("Video available:",r);const p={audio:l,video:r?{facingMode:"user"}:!1};(l||r)&&(await i.localParticipant.enableCameraAndMicrophone(),console.log("Local media enabled")),S=l,L=r,J(),W(),x.classList.add("hidden"),v.classList.remove("hidden"),y.innerHTML="",i.localParticipant&&c.updateParticipant(i.localParticipant,!0),await se(),console.log("Local participant:",i.localParticipant?.identity),console.log("Remote participants:",Array.from(i.participants?.entries()||[]).map(([u,m])=>m.identity)),R("Connected"),s(`Joined room: ${t}`)}catch(a){console.error("Error connecting to room:",a),R("Connection failed"),s("Failed to connect to room: "+a.message),x.classList.remove("hidden")}}catch(o){console.error("Error joining room:",o),s("Failed to join room: "+o.message),x.classList.remove("hidden")}}async function se(){try{await navigator.mediaDevices.getUserMedia({audio:!0,video:!0});const e=await navigator.mediaDevices.enumerateDevices(),t=e.filter(o=>o.kind==="audioinput");C.innerHTML="",t.forEach(o=>{const a=document.createElement("option");a.value=o.deviceId,a.text=o.label||`Microphone ${C.length+1}`,C.appendChild(a)});const n=e.filter(o=>o.kind==="videoinput");k.innerHTML="",n.forEach(o=>{const a=document.createElement("option");a.value=o.deviceId,a.text=o.label||`Camera ${k.length+1}`,k.appendChild(a)}),C.addEventListener("change",async()=>{try{if(!i||!i.localParticipant){console.log("Cannot change audio device: Not connected to a room");return}const o=C.value;if(!o)return;await i.switchActiveDevice(LivekitClient.Track.Kind.Audio,o),s("Microphone changed")}catch(o){console.error("[ERROR] Failed to switch audio device:",o),s("Failed to change microphone: "+(o.message||"Unknown error"))}}),k.addEventListener("change",async()=>{try{if(!i||!i.localParticipant){console.log("Cannot change video device: Not connected to a room");return}const o=k.value;if(!o)return;await i.switchActiveDevice(LivekitClient.Track.Kind.Video,o),s("Camera changed")}catch(o){console.error("[ERROR] Failed to switch video device:",o),s("Failed to change camera: "+(o.message||"Unknown error"))}})}catch(e){console.error("Failed to enumerate devices:",e),(e.name==="NotAllowedError"||e.message.includes("Permission denied"))&&H.classList.remove("hidden")}}function Pe(){if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices){console.log("Browser does not support mediaDevices API");return}navigator.mediaDevices.enumerateDevices().then(e=>{for(;C.firstChild;)C.removeChild(C.firstChild);for(;k.firstChild;)k.removeChild(k.firstChild);const t=document.createElement("option");t.value="default",t.text="Default Microphone",C.appendChild(t);const n=document.createElement("option");n.value="default",n.text="Default Camera",k.appendChild(n);const o=e.filter(l=>l.kind==="audioinput"),a=e.filter(l=>l.kind==="videoinput");o.forEach(l=>{const r=document.createElement("option");r.value=l.deviceId,r.text=l.label||`Microphone ${C.length+1}`,C.appendChild(r)}),a.forEach(l=>{const r=document.createElement("option");r.value=l.deviceId,r.text=l.label||`Camera ${k.length+1}`,k.appendChild(r)})}).catch(e=>{console.error("Error enumerating devices:",e)})}function Re(){if(!("sinkId"in HTMLMediaElement.prototype)){for(console.log("Browser does not support output device selection");E.firstChild;)E.removeChild(E.firstChild);const e=document.createElement("option");e.value="default",e.text="Default (Browser Controlled)",E.appendChild(e);return}navigator.mediaDevices.enumerateDevices().then(e=>{for(;E.firstChild;)E.removeChild(E.firstChild);const t=document.createElement("option");t.value="default",t.text="Default Speaker",E.appendChild(t),e.filter(o=>o.kind==="audiooutput").forEach(o=>{const a=document.createElement("option");a.value=o.deviceId,a.text=o.label||`Speaker ${E.length+1}`,E.appendChild(a)})}).catch(e=>{console.error("Error enumerating output devices:",e)})}function Ae(){const e=E.value;if(!i){console.log("Room not connected yet, audio output will be set when connected");return}try{document.querySelectorAll("audio").forEach(n=>{typeof n.sinkId<"u"&&n.setSinkId(e).then(()=>{console.log(`Success, audio output device attached: ${e}`)}).catch(o=>{console.error("Error setting audio output:",o)})}),s("Speaker changed successfully")}catch(t){console.error("Error changing audio output:",t),s("Failed to change speaker")}}function R(e){he.textContent=e,$.classList.remove("hidden")}function P(){try{if(!i||!v){console.error("Cannot update grid: Room or container not available");return}if(Te(),Me(),y=document.createElement("div"),y.id="videoGrid",y.className="grid gap-2 w-full h-full p-2",v.appendChild(y),c.adminViewState.viewMode!=="normal"){const e=c.adminViewState;if(e.viewMode==="expanded"&&e.targetParticipantId){le(e.targetParticipantId,!0);return}else if(e.viewMode==="screenShareFullScreen"&&e.targetParticipantId){de(e.targetParticipantId,!0);return}}if(!d.adminOverride){if(d.isExpandedView&&d.expandedParticipantId){le(d.expandedParticipantId,!1);return}if(d.isScreenShareFullScreen&&d.screenShareParticipantId){de(d.screenShareParticipantId,!1);return}}O()}catch(e){console.error("Critical error updating grid:",e);try{if(v){v.innerHTML="";const t=document.createElement("div");t.id="videoGrid",t.className="grid gap-2 w-full h-full p-2",v.appendChild(t),i&&i.localParticipant&&V(i.localParticipant,!0,"h-64")}}catch(t){console.error("Failed to create fallback grid:",t)}}}function O(){try{const e=Ce();y.className=y.className.replace(/grid-cols-\d+/g,"");const t=we(e);y.classList.add(t);const n=Ee(e);for(const[o,a]of c.participants.entries()){const{participant:l,isLocal:r,isAdmin:p}=a;V(l,r,n,p)}ze()}catch(e){console.error("Error rendering normal grid:",e)}}function le(e,t=!1){try{const n=c.participants.get(e);if(!n){console.warn("Expanded view: Participant not found, reverting to normal view"),d.isExpandedView=!1,d.expandedParticipantId=null,O();return}const{participant:o,isLocal:a,isAdmin:l}=n;v.innerHTML="";const r=document.createElement("div");r.className="expanded-view flex h-full";const p=document.createElement("div");p.className="sidebar flex flex-col overflow-y-auto w-48 mr-2";const u=document.createElement("div");if(u.className="main-content flex-grow relative",t){const h=document.createElement("div");h.className="lk-admin-control-indicator absolute top-4 left-4 bg-purple-700 text-white px-3 py-2 rounded-md z-50",h.textContent="Admin controlled view",u.appendChild(h)}V(o,a,"h-full",l,!0,u);for(const[h,f]of c.participants.entries())if(h!==e){const w=document.createElement("div");w.className="sidebar-tile relative h-32 mb-2",V(f.participant,f.isLocal,"h-full",f.isAdmin,!1,w),w.addEventListener("click",()=>{d.expandedParticipantId=h,P()}),p.appendChild(w)}r.appendChild(p),r.appendChild(u);const m=document.createElement("button");m.className="absolute top-4 right-4 bg-gray-800 text-white p-2 rounded-md z-50",m.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',m.addEventListener("click",()=>{t&&c.isCurrentUserAdmin()?(c.setAdminViewState("normal"),A({viewMode:"normal"})):t||(d.isExpandedView=!1,d.expandedParticipantId=null),P()}),u.appendChild(m),v.appendChild(r)}catch(n){console.error("Error rendering expanded view:",n),O()}}function de(e,t=!1){try{const n=c.screenShares.get(e);if(!n){console.warn("Screen share full screen: Screen share not found, reverting to normal view"),d.isScreenShareFullScreen=!1,d.screenShareParticipantId=null,O();return}const{participant:o,track:a}=n,l=c.participants.get(e),r=l&&l.isAdmin,p=document.createElement("div");p.className="screen-share-fullscreen flex flex-col h-full",v.appendChild(p);const u=document.createElement("div");if(u.className="main-screen-container flex-grow relative",p.appendChild(u),t){const I=document.createElement("div");I.className="lk-admin-control-indicator absolute top-4 left-4 bg-purple-700 text-white px-3 py-2 rounded-md z-50",I.textContent="Admin controlled screen share",u.appendChild(I)}const m=document.createElement("video");m.autoplay=!0,m.muted=!0,m.playsInline=!0,m.className="w-full h-full object-contain",a.attach(m),u.appendChild(m);const h=document.createElement("div");h.className="participant-sidebar flex overflow-y-auto mt-2 h-32 gap-2",p.appendChild(h);for(const[I,T]of c.participants.entries()){const g=document.createElement("div");g.className="sidebar-tile relative w-48 h-full flex-shrink-0",h.appendChild(g),V(T.participant,T.isLocal,"h-full",T.isAdmin,!1,g)}const f=document.createElement("div");f.className="absolute top-4 left-4 bg-gray-800 bg-opacity-75 text-white px-3 py-2 rounded-md",f.textContent=`${e}'s screen`,t&&(f.className="absolute top-16 left-4 bg-gray-800 bg-opacity-75 text-white px-3 py-2 rounded-md"),u.appendChild(f);const w=document.createElement("button");w.className="absolute top-4 right-4 bg-gray-800 text-white p-2 rounded-md z-50",w.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',w.addEventListener("click",()=>{t&&c.isCurrentUserAdmin()?(c.setAdminViewState("normal"),A({viewMode:"normal"})):t||(d.isScreenShareFullScreen=!1,d.screenShareParticipantId=null),P()}),u.appendChild(w)}catch(n){console.error("Error rendering screen share full screen:",n),O()}}function Me(){try{v.querySelectorAll(".expand-button, .screen-fullscreen-toggle, .admin-control-button, .sidebar-tile").forEach(De),v.innerHTML=""}catch(e){console.error("Error clearing main container:",e),v.innerHTML=""}}function De(e){try{const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e)}catch(t){console.error("Error cleaning up element:",t)}}function Te(){try{v.querySelectorAll("video, audio").forEach(t=>{t.pause&&t.pause(),t.srcObject&&(t.srcObject=null)})}catch(e){console.error("Error detaching media tracks:",e)}}function Be(e){try{const t=d.isExpandedView&&d.expandedParticipantId===e;c.isCurrentUserAdmin()?t?(c.setAdminViewState("normal"),A({viewMode:"normal"})):(c.setAdminViewState("expanded",e),A({viewMode:"expanded",targetParticipantId:e})):t?(d.isExpandedView=!1,d.expandedParticipantId=null):(d.isExpandedView=!0,d.expandedParticipantId=e,d.isScreenShareFullScreen=!1,d.screenShareParticipantId=null),P()}catch(t){console.error("Error toggling expanded view:",t)}}function Ne(e){try{const t=d.isScreenShareFullScreen&&d.screenShareParticipantId===e;c.isCurrentUserAdmin()?t?(c.setAdminViewState("normal"),A({viewMode:"normal"})):(c.setAdminViewState("screenShareFullScreen",e),A({viewMode:"screenShareFullScreen",targetParticipantId:e})):t?(d.isScreenShareFullScreen=!1,d.screenShareParticipantId=null):(d.isScreenShareFullScreen=!0,d.screenShareParticipantId=e,d.isExpandedView=!1,d.expandedParticipantId=null),P()}catch(t){console.error("Error toggling screen share full screen:",t)}}function we(e){const t=document.getElementById("videoGrid");t&&(t.className=t.className.replace(/grid-cols-\d+/g,""),t.classList.add("mobile-grid"),e===1?(console.log("Setting grid to 1 column for participant count:",e),t.classList.add("grid-cols-1")):e===2||e<=4?(console.log("Setting grid to 2 columns for participant count:",e),t.classList.add("grid-cols-2")):e<=9?(console.log("Setting grid to 3 columns for participant count:",e),t.classList.add("grid-cols-3")):e<=16?(console.log("Setting grid to 4 columns for participant count:",e),t.classList.add("grid-cols-4")):(console.log("Setting grid to 5 columns for participant count:",e),t.classList.add("grid-cols-5")))}function Ee(e){return window.innerWidth<=600?"mobile-tile":e<=2?"stretch-container":e<=4?"h-64":e<=9?"h-48":e<=16?"h-40":"h-32"}window.addEventListener("resize",je(()=>{if(i){const e=c.getParticipantCount();console.log("Resize detected, updating grid layout for participants:",e),we(e);const t=Ee(e);document.querySelectorAll('[id^="participant-"]').forEach(o=>{o.classList.remove("stretch-container","h-64","h-48","h-40","h-32"),o.classList.add(t),o.classList.contains("mobile-tile")||o.classList.add("mobile-tile")})}},250));function Ue(e){try{const t=e.getTrackPublication(LivekitClient.Track.Source.Microphone);if(!t||!t.track||_.has(e.sid))return;try{const n=new(window.AudioContext||window.webkitAudioContext),o=n.createAnalyser();o.fftSize=256;const a=t.track.attach();n.createMediaStreamSource(a.srcObject).connect(o),_.set(e.sid,{analyser:o,audioContext:n}),Fe(e)}catch(n){console.error("Failed to setup audio visualization:",n)}}catch(t){console.error("[ERROR] Error in setupAudioVisualization:",t)}}function Fe(e){try{const t=_.get(e.sid);if(!t)return;const{analyser:n}=t,o=new Uint8Array(n.frequencyBinCount),a=document.getElementById(`audio-indicator-${e.identity}`);if(!a)return;const l=()=>{try{n.getByteFrequencyData(o);let r=0;for(let m=0;m<o.length;m++)r+=o[m];const p=r/o.length,u=Math.max(4,Math.min(12,4+p/25));a.style.width=`${u}px`,a.style.height=`${u}px`,i&&i.state===LivekitClient.ConnectionState.Connected&&requestAnimationFrame(l)}catch(r){console.error("[ERROR] Error in audio visualization:",r)}};l()}catch(t){console.error("[ERROR] Error in visualizeAudio:",t)}}function Oe(e){y.querySelectorAll('[id^="participant-"]').forEach(n=>{n.classList.remove("border-2","border-blue-500")}),e.forEach(n=>{const o=document.getElementById(`participant-${n.identity}`);o&&o.classList.add("border-2","border-yellow-500")})}function J(){S?(Q.classList.remove("hidden"),X.classList.add("hidden")):(Q.classList.add("hidden"),X.classList.remove("hidden")),q.classList.remove("bg-red-600"),q.classList.add("bg-gray-700")}function W(){L?(Z.classList.remove("hidden"),ee.classList.add("hidden")):(Z.classList.add("hidden"),ee.classList.remove("hidden")),K.classList.remove("bg-red-600"),K.classList.add("bg-gray-700")}function Ve(e,t){const n=document.getElementById(`connection-quality-${t.identity}`);if(!n)return;let o="",a="";switch(e){case LivekitClient.ConnectionQuality.Excellent:o="text-green-500",a="Excellent";break;case LivekitClient.ConnectionQuality.Good:o="text-green-400",a="Good";break;case LivekitClient.ConnectionQuality.Poor:o="text-yellow-500",a="Poor";break}n.className=`text-xs ${o}`,n.title=a}function s(e,t=3e3){fe.textContent=e,te.classList.remove("hidden"),setTimeout(()=>{te.classList.add("hidden")},t)}function Ce(){if(!i)return 1;let e=1;try{i.participants instanceof Map?e=i.participants.size+1:i.remoteParticipants?i.remoteParticipants instanceof Map?e=i.remoteParticipants.size+1:Array.isArray(i.remoteParticipants)?e=i.remoteParticipants.length+1:typeof i.remoteParticipants=="object"&&(e=Object.keys(i.remoteParticipants).length+1):i._state&&i._state.participants&&(e=Object.keys(i._state.participants).length);const t=document.querySelectorAll('[id^="participant-"]');return t.length>e&&(e=t.length),console.log("Calculated participant count:",e),e}catch(t){return console.error("Error calculating participant count:",t),Math.max(1,e)}}async function $e(e,t){try{const n=ke(e);console.log("Getting token for user:",e,"room:",t,"isAdmin:",n);const o=await fetch(`/api/get-token?username=${encodeURIComponent(e)}&room=${encodeURIComponent(t)}`);if(!o.ok)throw new Error(`Failed to get token: ${o.status} ${o.statusText}`);const{token:a,url:l}=await o.json();if(!a)throw new Error("Invalid token response from server");if(console.log("Received token and URL from server:",{url:l}),l&&(re=l),i&&i.state!==LivekitClient.ConnectionState.Disconnected)try{await i.disconnect(),await new Promise(r=>setTimeout(r,500))}catch(r){console.log("Error disconnecting from previous room:",r)}return oe=t,console.log("Token acquired for room:",t,"isAdmin:",n),a}catch(n){throw console.error("Error getting token:",n),s("Failed to get access token: "+(n.message||"Unknown error")),n}}function je(e,t){let n;return function(...o){const a=this;clearTimeout(n),n=setTimeout(()=>{n=null,e.apply(a,o)},t)}}function ke(e){return["admin","moderator","host","teacher","instructor"].some(n=>e.toLowerCase()===n.toLowerCase()||e.toLowerCase().startsWith(n.toLowerCase()+"-")||e.toLowerCase().endsWith("-"+n.toLowerCase()))}function Ge(){try{if(!i){console.error("Cannot setup admin data channel: Room not initialized");return}if(console.log("Setting up admin data channel"),i._adminDataChannelSetup){console.log("Admin data channel already set up");return}const e=(t,n,o)=>{if(o===LivekitClient.DataPacket_Kind.RELIABLE)try{const a=JSON.parse(new TextDecoder().decode(t));a&&a.type==="admin-control"&&a.adminViewState&&(console.log("Received admin control message:",a),be(a,n))}catch(a){console.error("Error parsing data channel message:",a)}};i._adminDataHandler=e,i.on(LivekitClient.RoomEvent.DataReceived,i._adminDataHandler),i._adminDataChannelSetup=!0,console.log("Admin data channel setup complete")}catch(e){console.error("Error setting up admin data channel:",e)}}function be(e,t){try{if(!e||!t){console.warn("Invalid data or sender in admin control message");return}const n=c.participants.get(t.identity);if(!n||!n.isAdmin){console.warn("Received admin control message from non-admin user:",t.identity);return}const o=e.adminViewState;if(!o||!o.viewMode||!o.timestamp){console.warn("Invalid admin state data:",o);return}if(c.adminViewState.timestamp>=o.timestamp){console.log("Ignoring outdated admin state update");return}c.adminViewState={viewMode:o.viewMode,targetParticipantId:o.targetParticipantId||null,adminIdentity:t.identity,timestamp:o.timestamp},d.adminOverride=o.viewMode!=="normal",o.viewMode==="normal"?s(`Admin ${t.identity} released control`):s(`Admin ${t.identity} is controlling the view`),P()}catch(n){console.error("Error handling admin control message:",n,"data:",e);try{d.adminOverride=!1,P()}catch(o){console.error("Failed to reset view after admin control error:",o)}}}function A(e){try{if(!e||!e.viewMode)return console.error("Invalid admin view state for broadcast:",e),!1;if(!i||!i.localParticipant)return console.error("Cannot broadcast admin state: Room not connected"),!1;if(!c.isCurrentUserAdmin())return console.warn("Non-admin user attempted to broadcast admin state"),!1;const t={type:"admin-control",adminViewState:{viewMode:e.viewMode,targetParticipantId:e.targetParticipantId||null,adminIdentity:i.localParticipant.identity,timestamp:Date.now()}};try{const o=new TextEncoder().encode(JSON.stringify(t));return i.localParticipant.publishData(o,LivekitClient.DataPacket_Kind.RELIABLE),console.log("Admin view state broadcasted:",t.adminViewState),d.adminOverride=e.viewMode!=="normal",!0}catch(n){return console.error("Error publishing admin control data:",n),!1}}catch(t){return console.error("Error broadcasting admin view state:",t),!1}}function ze(){for(const[e,t]of c.screenShares.entries()){const{participant:n,track:o}=t,a=c.participants.get(e),l=a&&a.isAdmin,r=document.createElement("div");r.id=`screen-${e}`,r.className="screen-share-tile bg-gray-800 rounded-lg h-64 relative overflow-hidden",y.appendChild(r);const p=document.createElement("video");p.autoplay=!0,p.muted=!0,p.playsInline=!0,p.className="w-full h-full object-contain",o.attach(p),r.appendChild(p);const u=document.createElement("div");u.className="absolute bottom-0 left-0 right-0 bg-gray-900 bg-opacity-70 p-2 flex justify-between items-center";const m=document.createElement("span");m.className="text-white text-sm",m.textContent=`${e}'s Screen`,l&&(m.innerHTML=`${e}'s Screen <span class="lk-admin-star ml-1 text-yellow-400">★</span>`),u.appendChild(m);const h=document.createElement("button");if(h.className="screen-fullscreen-toggle text-white p-1 bg-gray-700 rounded ml-2",h.innerHTML=`
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="15 3 21 3 21 9"></polyline>
        <polyline points="9 21 3 21 3 15"></polyline>
        <line x1="21" y1="3" x2="14" y2="10"></line>
        <line x1="3" y1="21" x2="10" y2="14"></line>
      </svg>
    `,h.addEventListener("click",()=>{Ne(e)}),u.appendChild(h),c.isCurrentUserAdmin()){const f=document.createElement("button");f.className="admin-control-button text-white p-1 bg-purple-700 rounded ml-2",f.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path></svg>',f.title="Control this screen share for all participants",f.addEventListener("click",()=>{c.setAdminViewState("screenShareFullScreen",e),A({viewMode:"screenShareFullScreen",targetParticipantId:e}),P()}),u.appendChild(f)}r.appendChild(u)}}function V(e,t,n,o=!1,a=!1,l=null){try{const r=document.createElement("div");r.id=`participant-${e.identity}`;const p=e.speaking?"active-speaker":"";r.className=`bg-gray-800 rounded-lg ${n} participant-box ${p} relative`;const u=document.createElement("div");u.className="absolute inset-0 overflow-hidden",r.appendChild(u),l?l.appendChild(r):y.appendChild(r);const m=e.getTrackPublication(LivekitClient.Track.Source.Camera);if(m&&m.track&&!m.isMuted){const g=m.track.attach();g.autoplay=!0,g.playsInline=!0,g.className="w-full h-full object-contain",t&&(g.style.transform="scaleX(-1)"),u.appendChild(g)}else{const g=document.createElement("div");g.className="w-full h-full flex items-center justify-center bg-gray-700 text-white text-4xl font-bold",g.textContent=e.identity.charAt(0).toUpperCase(),u.appendChild(g)}const h=document.createElement("div");h.className="absolute bottom-0 left-0 right-0 bg-gray-900 bg-opacity-70 p-2 flex justify-between items-center z-10";const f=document.createElement("span");f.className="text-white text-sm",o?f.innerHTML=`${t?e.identity+" (You)":e.identity} <span class="lk-admin-star ml-1 text-yellow-400">★</span>`:f.textContent=t?`${e.identity} (You)`:e.identity,h.appendChild(f);const w=document.createElement("div");w.className="flex items-center gap-2";const I=document.createElement("div");I.className="h-4 w-4 rounded-full bg-red-500",I.id=`audio-indicator-${e.identity}`;const T=e.getTrackPublication(LivekitClient.Track.Source.Microphone);if(T&&!T.isMuted&&(I.classList.add("bg-green-500"),I.classList.remove("bg-red-500")),w.appendChild(I),!a){const g=document.createElement("button");g.className="expand-button text-white p-1 bg-gray-700 hover:bg-gray-600 rounded absolute top-2 right-2 z-10",g.innerHTML=`
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15 3 21 3 21 9"></polyline>
          <polyline points="9 21 3 21 3 15"></polyline>
          <line x1="21" y1="3" x2="14" y2="10"></line>
          <line x1="3" y1="21" x2="10" y2="14"></line>
        </svg>
      `,g.addEventListener("click",Y=>{Y.stopPropagation(),Be(e.identity)}),r.appendChild(g)}if(c.isCurrentUserAdmin()&&!t){const g=document.createElement("button");g.className="admin-control-button text-white p-1 bg-purple-700 hover:bg-purple-600 rounded ml-1",g.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path></svg>',g.title="Make this view visible to all participants",g.addEventListener("click",Y=>{Y.stopPropagation(),c.setAdminViewState("expanded",e.identity),A({viewMode:"expanded",targetParticipantId:e.identity}),P()}),w.appendChild(g)}return h.appendChild(w),r.appendChild(h),r}catch(r){return console.error("Error creating participant tile:",r),null}}async function He(e,t=null){try{console.log("Joining room with token"),i&&ae(),i=new LivekitClient.Room({adaptiveStream:!0,dynacast:!0,publishDefaults:{simulcast:!0,videoSimulcastLayers:[{rid:"f",scaleResolutionDownBy:1,maxBitrate:9e5},{rid:"h",scaleResolutionDownBy:2,maxBitrate:3e5},{rid:"q",scaleResolutionDownBy:3,maxBitrate:1e5}]}}),ye();try{await i.connect(re,e),console.log("Connected to room:",i.name),document.title=`LiveKit Room: ${i.name}`;const n=await navigator.mediaDevices.enumerateDevices(),o=n.some(r=>r.kind==="audioinput"),a=n.some(r=>r.kind==="videoinput");console.log("Audio available:",o),console.log("Video available:",a);const l={audio:o,video:a?{facingMode:"user"}:!1};(o||a)&&(await i.localParticipant.enableCameraAndMicrophone(),console.log("Local media enabled")),S=o,L=a,J(),W(),x.classList.add("hidden"),v.classList.remove("hidden"),y.innerHTML="",i.localParticipant&&c.updateParticipant(i.localParticipant,!0),await se(),console.log("Local participant:",i.localParticipant?.identity),console.log("Remote participants:",Array.from(i.participants?.entries()||[]).map(([r,p])=>p.identity)),R("Connected"),s(`Joined room: ${i.name}`)}catch(n){console.error("Error connecting to room:",n),R("Connection failed"),s("Failed to connect to room: "+(n.message||"Unknown error"))}}catch(n){console.error("Error joining room:",n),s("Failed to join room: "+n.message)}}typeof z<"u"&&typeof z.exports<"u"&&(z.exports={ParticipantManager:c,determineIfAdmin:ke,handleAdminControlMessage:be,broadcastAdminViewState:A,setupAdminDataChannel:Ge,connectWithToken:He,joinRoom:ce})});export default qe();
